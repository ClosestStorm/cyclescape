:javascript
  var geo_field = "#{thing.class.name.underscore}_loc_json"
  var point_zoom = "#{Geo::POINT_ZOOM}"

:ruby
  @map = basic_map do |map, page|
    if @start_location.geometry_type == RGeo::Feature::Point
      z = @start_location.z || Geo::POINT_ZOOM
      page << map.setCenter(OpenLayers::LonLat.new(@start_location.x, @start_location.y).transform(projection, map.getProjectionObject()),z);
    else
      bbox = RGeo::Cartesian::BoundingBox.new(@start_location.factory)
      bbox.add(@start_location)
      page << map.zoomToExtent(OpenLayers::Bounds.new(bbox.min_x, bbox.min_y, bbox.max_x, bbox.max_y).transform(projection, map.getProjectionObject()))
    end

    vectorlayer = MapLayers::JsVar.new("vectorlayer")
    page.assign(vectorlayer, OpenLayers::Layer::Vector.new("Vectors", {projection: projection, styleMap: 'MapStyle.editStyle()'.to_sym}))
    page << map.add_layer(vectorlayer)

    page << 'MapEdit.init(map, vectorlayer, geo_field, point_zoom)'
  end

%div#map.map.edit
  .map-tools-overlay
    %nav
      %ul.tabs
        %li
          %a
            %span.point
            point
        %li
          %a
            %span.route
            route
        %li
          %a
            %span.area
            area
    .panes
      .pane
        %h3 Draw a Point
        %p Click the map to mark the point.
        %p Drag the point to reposition.
        %p Zoom in and pan to select the correct place.
      .pane
        %h3 Draw a Route
        %p Click the points to mark a route on the map.
        %p Double-click to complete the route.
        %p Drag the grey points to create new corners.
      .pane
        %h3 Draw an Area
        %p Click the points to mark an area on the map.
        %p Double-click to complete the shape.
        %p Zoom in and pan to select the correct area.
    %ul.undo-clear
      %li
        %a.edit-undo
          %span.icon-undo
          %span.txt
            undo
      %li
        %a.edit-clear
          %span.icon-clear
          %span.txt
            clear
  = render partial: "shared/map_search", locals: {map_id: "map"}
  != @map.to_html
