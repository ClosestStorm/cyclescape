
- zoom = 16
- projection = OpenLayers::Projection.new("EPSG:4326")
- googleproj = OpenLayers::Projection.new("EPSG:900913")

%script
  function serialize(feature) {                                         |
            var format = new OpenLayers.Format.GeoJSON({internalProjection: new OpenLayers.Projection("EPSG:900913"), externalProjection : new OpenLayers.Projection("EPSG:4326")}) ;                |
            var str = format.write(feature);                            |
            document.getElementById('issue_loc_json').value = str;      |
        }                                                               |

- @map = MapLayers::Map.new("map", {theme: "/openlayers/theme/default/style.css", projection: googleproj, displayProjection: projection}) do |map, page|
  - page << map.add_layer(MapLayers::OSM_MAPNIK)
  - page << map.add_control(OpenLayers::Control::LayerSwitcher.new)
  - page << map.setCenter(OpenLayers::LonLat.new(0.1477639423685, 52.27332049515).transform(projection, map.getProjectionObject()),zoom);

  - vectorlayer = MapLayers::JsVar.new("vectorlayer")
  - page.assign(vectorlayer, OpenLayers::Layer::Vector.new("Vectors", projection: projection))
  - page << map.add_layer(vectorlayer)
  - page << map.addControl(OpenLayers::Control::EditingToolbar.new(vectorlayer));
  - options = MapLayers::JsVar.new("options")
  - page.assign(options, { hover: true, onSelect: :serialize })
  - select = MapLayers::JsVar.new("select")
  - page.assign(select, OpenLayers::Control::SelectFeature.new(vectorlayer, options))
  - page << map.addControl(select)
  - page << select.activate()
%div#map{ style: "height: 300px; width: 100%; border:1px solid black; margin-top: 3em" }
!= @map.to_html
