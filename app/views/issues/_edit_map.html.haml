:ruby
  zoom = 16
  projection = OpenLayers::Projection.new("EPSG:4326")
  googleproj = OpenLayers::Projection.new("EPSG:900913")

:javascript
  function serialize(feature) {
    var format = new OpenLayers.Format.GeoJSON({internalProjection: new OpenLayers.Projection("EPSG:900913"), externalProjection : new OpenLayers.Projection("EPSG:4326")});
    var str = format.write(feature);
    document.getElementById('issue_loc_json').value = str;
  }

  function feature_added(event) {
    toolbar.deactivate();
    modify.activate();
    serialize(event.feature);
  }

  function feature_modified(event) {
    serialize(event.feature);
  }

:ruby
  @map = MapLayers::Map.new("map", {theme: "/openlayers/theme/default/style.css", projection: googleproj, displayProjection: projection}) do |map, page|
    page << map.add_layer(MapLayers::OSM_MAPNIK)
    page << map.add_control(OpenLayers::Control::LayerSwitcher.new)
    page << map.setCenter(OpenLayers::LonLat.new(0.1477639423685, 52.27332049515).transform(projection, map.getProjectionObject()),zoom);

    vectorlayer = MapLayers::JsVar.new("vectorlayer")
    page.assign(vectorlayer, OpenLayers::Layer::Vector.new("Vectors", projection: projection))
    page << map.add_layer(vectorlayer)
    toolbar = MapLayers::JsVar.new("toolbar")
    page.assign(toolbar, OpenLayers::Control::EditingToolbar.new(vectorlayer))
    page << map.addControl(toolbar)
    modify = MapLayers::JsVar.new("modify")
    page.assign(modify, OpenLayers::Control::ModifyFeature.new(vectorlayer))
    page << map.addControl(modify)
  end

%div#map{ style: "height: 300px; width: 100%; border:1px solid black; margin-top: 3em" }
!= @map.to_html
:javascript
  vectorlayer.events.on({featureadded: feature_added})
  vectorlayer.events.on({featuremodified: feature_modified})
