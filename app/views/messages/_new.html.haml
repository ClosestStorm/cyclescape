%section.new-message
  %p.label Select
  %ul.tabs.styled-tabs
    %li.compose-new
      = link_to "#compose-new" do
        %span Compose New
    %li.from-library
      = link_to "#from-library" do
        %span From Library
  .panes
    #compose-new.pane
      %ul.tabs
        %li.text
          = link_to "#new-text-message" do
            = t ".text_message"
            %span.nub
        %li.image
          = link_to "#new-photo-message" do
            = t ".photo_message"
            %span.nub
        -#
          %li.map-point
            = link_to "#new-map-message" do
              Map
              %span.nub
        %li.link
          = link_to "#new-link-message" do
            = t ".link_message"
            %span.nub
        %li.cal
          = link_to "#new-deadline-message" do
            = t ".deadline_message"
            %span.nub
        -#
          %li.doc
            = link_to "#new-attachment-message" do
              Attachment
            %span.nub
      .panes
        #new-text-message.pane
          - if cannot_post?
            .access-denied= t(".sign_in_to_post_html", sign_in_link: link_to_sign_in)
          = semantic_form_for @new_message, url: thread_messages_path(@thread) do |f|
            = f.inputs do
              = f.input :body, input_html: {disabled: cannot_post?}
            = f.buttons do
              = f.commit_button button_html: {class: "btn-green", disabled: cannot_post?}
        = render "message/photos/new"
        = render "message/links/new"
        = render "message/deadlines/new"
    #from-library.pane
      .scrollable.autoheight
        .panels
          .listing
            = form_tag search_library_path(format: :json), {method: :get, class: "library-search filters", target: "#library-results"} do
              .search-box
                = label_tag :query, "Search issues"
                = text_field_tag :query, nil, placeholder: "Search issues"
              %button{:type => "submit"} go
              %span.nub
            .library-content#library-search
              .library-items#library-recent{"data-src" => recent_library_path}
                %h3 Recently added
                %ul.content-icon-list(data-bind="template: {name: 'library-item-template', foreach: initial_items() }")
              .library-results.hide#library-results
                %h3 Search results
                %ul.content-icon-list(data-bind="template: {name: 'library-item-template', foreach: search_results() }")

          #add-library-item
            %h2 Add item to thread
            %a.prev.btn-grey Back
            .library-content(data-bind="with: selected()")
              = semantic_form_for LibraryItemMessage.new, url: thread_library_items_path(@thread) do |f|
                = f.inputs do
                  = f.input :library_item_id, as: :hidden, input_html: {"data-bind" => "value: id"}
                  = semantic_fields_for Message.new do |f2|
                    = f2.input :body, input_html: {placeholder: "Explain how this library item relates to the discussion thread"}
                .library-item
                  %span(data-bind="attr: {class: item_type}")
                  .item-content
                    %h3(data-bind="text: title")
                    %p(data-bind="text: description")
                  .item-meta.hide
                    %a.btn-grey{:href => "#"} View Document
                    %p PDF [35kb]
                %button.btn-big-green(type="submit") Add to thread

// Template for library items
%script(type="text/html" id="library-item-template")
  %li(data-bind="attr: {'class': item_type}")
    .item-content
      %h4(data-bind="html: link")
      %p.meta(data-bind="text: description")
    %a.select.btn-green(href="#") Select&hellip;
